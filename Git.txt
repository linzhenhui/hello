git config --global user.name "Your Name"  设置用户名
git config --global user.email "email@example.com" 设置邮箱
git config命令的--global参数 全局参数
 mkdir 新建 
 cd 目录 
pwd 当前路径
git init 初始化Git仓库
git add xx.xxx 添加文件进入缓存
git commit -m "说明" 上传到仓库 
git status  命令可以让我们时刻掌握仓库当前的状态
git diff    就是查看difference变化
git log     命令显示从最近到最远的提交日志
git reset --hard HEAD^    回退至上一版本 几个^就是回退几个版本
git reset --hard 1094a    直接到commit Id 对应版本
git reflog 查看版本更迭情况
rm test.txt   删除文件
git checkout    用版本库里的版本替换工作区的版本
ssh-keygen -t rsa -C "281185344@qq.com" 创建SSH KEY
    远程GIT网站库
...或从命令行推送现有存储库
echo“#plane”>> README.md 
git init 
git add README.md 
git commit -m“first commit” 
git remote add origin https://github.com/linzhenhui/hello.git   设置远端版本库地址
git remote add origin git@github.com：linzhenhui/hello.git    或者这样
 git push -u origin master 这些是第一次才需要干的事情

git push origin master 后期上传远程版本库只需要这个
git branch     查看当前所有的分支
 
git branch –r  查看远程所有分支
 
git branch –a  查看本地远程分支
  
git tag        查看版本打的Tag
  
git checkout [name]     切换到name分支

git branch –d [name]    删除name分支
 
git checkout –b [name]  创建name分支 并切换到name分支上

 
git init       把当前的目录变成可以管理的git仓库，生成隐藏.git文件。

git add XX     把xx文件添加到暂存区去。
  
git add –A  （git add --all的缩写）
 
git add .      监控工作区的状态树，使用它会把工作时的所有变化提交到暂存区
  
git remote add origin 仓库地址   (关联一个远程库)
  
git push –u(第一次要用-u 以后不需要) origin master (把当前master分支推送到远程库)
  
git clone        仓库地址  (从远程库中克隆)
 
git status       查看仓库状态
  
git diff  XX     查看XX文件修改了那些内容
 
git reflog       查看历史记录的版本号id
  
git merge dev    在当前的分支上合并dev分支
   
git remote       查看远程库的信息
   
git remote –v    查看远程库的详细信息
   
git stash        把当前的工作隐藏起来 等以后恢复现场后继续工作
   
git stash list   查看所有被隐藏的文件列表
   
git push origin master  Git会把master分支推送到远程库对应的远程分支上
   
git reset  –hard HEAD^ 或者 git reset  –hard HEAD~ 回退到上一个版本
                   
     (如果想回退到100个版本，使用git reset –hard HEAD~100 )
